// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use ffi;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;
use super::ActorMeta;

glib_wrapper! {
    pub struct Effect(Object<ffi::ClutterEffect, ffi::ClutterEffectClass, EffectClass>) @extends ActorMeta;

    match fn {
        get_type => || ffi::clutter_effect_get_type(),
    }
}

pub const NONE_EFFECT: Option<&Effect> = None;

pub trait EffectExt: 'static {
    fn queue_repaint(&self);
}

impl<O: IsA<Effect>> EffectExt for O {
    fn queue_repaint(&self) {
        unsafe {
            ffi::clutter_effect_queue_repaint(self.as_ref().to_glib_none().0);
        }
    }
}

impl fmt::Display for Effect {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "Effect")
    }
}
