// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use ffi;
use glib::object::Cast;
use glib::translate::*;
use pango;
use std::fmt;
use super::Color;
use super::PaintNode;

glib_wrapper! {
    pub struct TextNode(Object<ffi::ClutterTextNode, ffi::ClutterTextNodeClass, TextNodeClass>) @extends PaintNode;

    match fn {
        get_type => || ffi::clutter_text_node_get_type(),
    }
}

impl TextNode {
    pub fn new(layout: Option<&pango::Layout>, color: Option<&Color>) -> TextNode {
        assert_initialized_main_thread!();
        unsafe {
            PaintNode::from_glib_full(ffi::clutter_text_node_new(
                layout.to_glib_none().0,
                color.to_glib_none().0,
            ))
            .unsafe_cast()
        }
    }
}

impl fmt::Display for TextNode {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "TextNode")
    }
}
